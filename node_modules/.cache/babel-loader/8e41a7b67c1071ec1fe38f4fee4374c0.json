{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaehee/velopert/mashup-todolist/src/components/TodoCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n_c = CircleButton;\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n_c2 = InsertFormPositioner;\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n_c3 = InsertForm;\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n_c4 = Input;\n\nfunction TodoCreate() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n\n  const onChange = e => setValue(e.target.value);\n\n  const onSubmit = e => {\n    // insert를 위해 enter했을 때 페이지 전체 reload 방지\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(InsertFormPositioner, {\n      children: /*#__PURE__*/_jsxDEV(InsertForm, {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter \\uB97C \\uB204\\uB974\\uC138\\uC694\",\n          onChange: onChange,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n      onClick: onToggle,\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoCreate, \"8hzxYQT0Xn4ApTkUNSD4/y9gAp8=\", false, function () {\n  return [useTodoDispatch, useTodoNextId];\n});\n\n_c5 = TodoCreate;\nexport default _c6 = /*#__PURE__*/React.memo(TodoCreate);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CircleButton\");\n$RefreshReg$(_c2, \"InsertFormPositioner\");\n$RefreshReg$(_c3, \"InsertForm\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TodoCreate\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/jeongjaehee/velopert/mashup-todolist/src/components/TodoCreate.js"],"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,gBAA/C;;;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,IACLA,KAAK,CAACC,IAAN,IACAP,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM;AACN,CA1CA;KAAMI,Y;AA4CN,MAAMI,oBAAoB,GAAGT,MAAM,CAACU,GAAI;AACxC;AACA;AACA;AACA;AACA,CALA;MAAMD,oB;AAON,MAAME,UAAU,GAAGX,MAAM,CAACY,IAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,U;AAYN,MAAME,KAAK,GAAGb,MAAM,CAACc,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;;AAUN,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMoB,QAAQ,GAAGhB,eAAe,EAAhC;AACA,QAAMiB,MAAM,GAAGhB,aAAa,EAA5B;;AAEA,QAAMiB,QAAQ,GAAG,MAAML,OAAO,CAAC,CAACR,IAAF,CAA9B;;AACA,QAAMc,QAAQ,GAAIC,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAhC;;AACA,QAAMQ,QAAQ,GAAIF,CAAD,IAAO;AAAE;AACtBA,IAAAA,CAAC,CAACG,cAAF;AACAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAET,MAAM,CAACU,OADT;AAEFC,QAAAA,IAAI,EAAEd,KAFJ;AAGFe,QAAAA,IAAI,EAAE;AAHJ;AAFD,KAAD,CAAR;AAQAd,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,MAAM,CAACU,OAAP,IAAkB,CAAlB;AACH,GAbD;;AAeA,sBACE;AAAA,eACGtB,IAAI,iBACH,QAAC,oBAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEiB,QAAtB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,WAAW,EAAC,gFAFd;AAGE,UAAA,QAAQ,EAAEH,QAHZ;AAIE,UAAA,KAAK,EAAEL;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEI,QAAvB;AAAiC,MAAA,IAAI,EAAEb,IAAvC;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAmBD;;GA1CQO,U;UAGUZ,e,EACFC,a;;;MAJRW,U;AA4CT,kCAAejB,KAAK,CAACmC,IAAN,CAAWlB,UAAX,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => { // insert를 위해 enter했을 때 페이지 전체 reload 방지\n      e.preventDefault();\n      dispatch({\n          type: 'CREATE',\n          todo: {\n              id: nextId.current,\n              text: value,\n              done: false\n          }\n      });\n      setValue('');\n      setOpen(false);\n      nextId.current += 1;\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input \n              autoFocus \n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\" \n              onChange={onChange}\n              value={value}\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);"]},"metadata":{},"sourceType":"module"}