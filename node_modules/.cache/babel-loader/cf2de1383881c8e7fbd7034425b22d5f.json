{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaehee/source/todolist_react/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useReducer, createContext, useContext, useRef, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport axios from \"axios\";\nimport useAsync from \"./useAsync\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`; // async function getList() {\n//   const response = await axios({\n//         method: 'GET',\n//         url: 'http://localhost:8080/api/todo',\n//       })\n//   return response.data;\n// }\n// const getList = async () => {\n//   try {\n//     await axios({\n//       method: 'GET',\n//       url: 'http://localhost:8080/api/todo',\n//     // }).then(res => console.log(res.data));\n//       }).then(res => {\n//         const { id, contents, done } = res.data;\n//         return { id, contents, done };\n//     });\n//   } catch (e) {\n//     console.error(e);\n//   }\n// }\n// async function getList() {\n//   const res = await axios({\n//     method: 'GET',\n//     url: 'http://localhost:8080/api/todo',\n//   });\n//   return res.status == 200 ? res.data : \"error\";\n// }\n// async function getList() {\n//   const res = await axios.get(\"http://localhost:8080/api/todo\")\n//       .then(function (response) {\n//         return response.data;\n//       }).catch(function (error) {\n//         return error;\n//       });\n// }\n\n_c = GlobalStyle;\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      console.log(action.todo);\n      return state.concat(action.todo);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\nconst TodoNextIdContext = /*#__PURE__*/createContext();\nexport function TodoProvider({\n  children\n}) {\n  _s();\n\n  const [initTodo, setInitTodo] = useState(null);\n  const [state, dispatch] = useReducer(todoReducer, initTodo);\n  const nextId = useRef(5);\n\n  const getList = async () => {\n    try {\n      await axios({\n        method: 'GET',\n        url: 'http://localhost:8080/api/todo'\n      });\n      setInitTodo(getList());\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  getList();\n  console.log(state); // console.log(getList());\n\n  return /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispatch,\n      children: /*#__PURE__*/_jsxDEV(TodoNextIdContext.Provider, {\n        value: nextId,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this);\n} // 커스텀 Hooks\n// TodoList에서 사용\n\n_s(TodoProvider, \"RmmbpSR62jjddVu9IYelbscRgMc=\");\n\n_c2 = TodoProvider;\nexport function useTodoState() {\n  _s2();\n\n  const context = useContext(TodoStateContext);\n\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n\n  return context;\n} // TodoCreate에서 사용\n\n_s2(useTodoState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useTodoDispatch() {\n  _s3();\n\n  const context = useContext(TodoDispatchContext);\n\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n\n  return context;\n}\n\n_s3(useTodoDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useTodoNextId() {\n  _s4();\n\n  const context = useContext(TodoNextIdContext);\n\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n\n  return context;\n}\n\n_s4(useTodoNextId, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction App() {\n  // const [state, refetch] = useAsync(getList);\n  //\n  // const { loading, data: todolist, error } = state;\n  //\n  // if (loading) return <div>로딩중..</div>\n  // if (error) return <div>에러가 발생했습니다.</div>\n  // if (!todolist) return null;\n  return /*#__PURE__*/_jsxDEV(TodoProvider, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(TodoHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoCreate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"TodoProvider\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/jeongjaehee/source/todolist_react/src/App.js"],"names":["React","useReducer","createContext","useContext","useRef","useState","createGlobalStyle","TodoTemplate","TodoHead","TodoList","TodoCreate","axios","useAsync","GlobalStyle","todoReducer","state","action","type","console","log","todo","concat","map","id","done","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","initTodo","setInitTodo","dispatch","nextId","getList","method","url","e","error","useTodoState","context","useTodoDispatch","useTodoNextId","App"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useContext, useRef, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport axios from \"axios\";\nimport useAsync from \"./useAsync\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\n// async function getList() {\n//   const response = await axios({\n//         method: 'GET',\n//         url: 'http://localhost:8080/api/todo',\n//       })\n//   return response.data;\n// }\n\n// const getList = async () => {\n//   try {\n//     await axios({\n//       method: 'GET',\n//       url: 'http://localhost:8080/api/todo',\n//     // }).then(res => console.log(res.data));\n//       }).then(res => {\n//         const { id, contents, done } = res.data;\n//         return { id, contents, done };\n//     });\n//   } catch (e) {\n//     console.error(e);\n//   }\n// }\n\n// async function getList() {\n//   const res = await axios({\n//     method: 'GET',\n//     url: 'http://localhost:8080/api/todo',\n//   });\n//   return res.status == 200 ? res.data : \"error\";\n// }\n\n// async function getList() {\n//   const res = await axios.get(\"http://localhost:8080/api/todo\")\n//       .then(function (response) {\n//         return response.data;\n//       }).catch(function (error) {\n//         return error;\n//       });\n// }\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      console.log(action.todo);\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map(todo =>\n          todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\n\nexport function TodoProvider({ children }) {\n  const [initTodo, setInitTodo] = useState(null);\n  const [state, dispatch] = useReducer(todoReducer, initTodo);\n  const nextId = useRef(5);\n\n  const getList = async () => {\n    try {\n      await axios({\n        method: 'GET',\n        url: 'http://localhost:8080/api/todo',\n      });\n      setInitTodo(getList());\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  getList();\n  console.log(state);\n  // console.log(getList());\n\n  return (\n      <TodoStateContext.Provider value={state}>\n        <TodoDispatchContext.Provider value={dispatch}>\n          <TodoNextIdContext.Provider value={nextId}>\n            {children}\n          </TodoNextIdContext.Provider>\n        </TodoDispatchContext.Provider>\n      </TodoStateContext.Provider>\n  );\n}\n\n// 커스텀 Hooks\n// TodoList에서 사용\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n\n// TodoCreate에서 사용\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n\nfunction App() {\n\n\n\n  // const [state, refetch] = useAsync(getList);\n  //\n  // const { loading, data: todolist, error } = state;\n  //\n  // if (loading) return <div>로딩중..</div>\n  // if (error) return <div>에러가 발생했습니다.</div>\n  // if (!todolist) return null;\n\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}