{"ast":null,"code":"import React, { useReducer, useEffect, useCallback } from \"react\"; // // LOADING, SUCCESS, ERROR\n// export function reducer(state, action) {\n//     switch (action.type) {\n//         case 'LOADING':\n//             return {\n//                 loading: true,\n//                 data: null,\n//                 error: null,\n//             };\n//         case 'SUCCESS':\n//             return {\n//                 loading: false,\n//                 data: action.data,\n//                 error: null,\n//             };\n//         case 'ERROR':\n//             return {\n//                 loading: false,\n//                 data: null,\n//                 error: action.error,\n//             };\n//         default:\n//             throw new Error(`Unhandled action type: ${action.type}`);\n//     }\n// }\n// // callback => api 호출 함수 / deps => useEffect에 넣을 두번째 파라미터 그대로 받아와서 사용\n// export default function useAsync(callback, deps = []) {\n//     const [state, dispatch] = useReducer(reducer, {\n//         loading: false,\n//         data: null,\n//         error: null\n//     });\n//\n//     const fetchData = useCallback(async () => {\n//         dispatch({ type: 'LOADING' });\n//         try {\n//             const data = await callback();\n//             dispatch({ type: 'SUCCESS', data });\n//         } catch (e) {\n//             dispatch({ type: 'ERROR', error: e });\n//         }\n//     }, [callback]);\n//\n//     useEffect(() => {\n//         fetchData();\n//     }, deps);\n//\n//     return [state, fetchData];\n// }","map":{"version":3,"sources":["/Users/jeongjaehee/source/todolist_react/src/useAsync.js"],"names":["React","useReducer","useEffect","useCallback"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,WAAvC,QAA0D,OAA1D,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useReducer, useEffect, useCallback } from \"react\";\n\n// // LOADING, SUCCESS, ERROR\n// export function reducer(state, action) {\n//     switch (action.type) {\n//         case 'LOADING':\n//             return {\n//                 loading: true,\n//                 data: null,\n//                 error: null,\n//             };\n//         case 'SUCCESS':\n//             return {\n//                 loading: false,\n//                 data: action.data,\n//                 error: null,\n//             };\n//         case 'ERROR':\n//             return {\n//                 loading: false,\n//                 data: null,\n//                 error: action.error,\n//             };\n//         default:\n//             throw new Error(`Unhandled action type: ${action.type}`);\n//     }\n// }\n\n// // callback => api 호출 함수 / deps => useEffect에 넣을 두번째 파라미터 그대로 받아와서 사용\n// export default function useAsync(callback, deps = []) {\n//     const [state, dispatch] = useReducer(reducer, {\n//         loading: false,\n//         data: null,\n//         error: null\n//     });\n//\n//     const fetchData = useCallback(async () => {\n//         dispatch({ type: 'LOADING' });\n//         try {\n//             const data = await callback();\n//             dispatch({ type: 'SUCCESS', data });\n//         } catch (e) {\n//             dispatch({ type: 'ERROR', error: e });\n//         }\n//     }, [callback]);\n//\n//     useEffect(() => {\n//         fetchData();\n//     }, deps);\n//\n//     return [state, fetchData];\n// }\n"]},"metadata":{},"sourceType":"module"}